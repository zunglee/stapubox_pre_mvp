##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
# Map User-Agent to mobile detection variable
    map $http_user_agent $is_mobile {
        default 0;

        # Common mobile devices
        ~*android.*mobile 1;
        ~*iphone 1;
        ~*ipod 1;
        ~*blackberry 1;
        ~*iemobile 1;
        ~*opera.*(mini|mobi) 1;
        ~*mobile.*safari 1;
        ~*mobile.*firefox 1;
        ~*windows.*phone 1;

        # Generic mobile patterns
        ~*mobile 1;
        ~*mobi 1;

        # Comprehensive mobile regex
        ~*(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge|maemo|midp|mmp|mobile.+firefox|netfront|opera.m(ob|in)i|palm(.os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows.ce|xda|xiino 1;
    }

     map $is_mobile $device_type {
        default "desktop";
        1 "mobile";
    }



server { 
	server_name www.stapubox.com stapubox.com; 

	  if ($host = www.stapubox.com) {
          return 301 https://stapubox.com$request_uri;
          }

          location /dashboard/ {
           rewrite ^/buzz/(.*) /buzz/$1 break;          
           proxy_pass http://localhost:2031;
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
                }




	  location /buzz/ {
           rewrite ^/buzz/(.*) /buzz/$1 break; 
	   proxy_pass http://localhost:2031;
	   proxy_set_header Host $host;
	   proxy_set_header X-Real-IP $remote_addr;
	   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	   proxy_set_header X-Forwarded-Proto $scheme;
	  	}
   


   ####define error page######
   error_page 404 = @notfound;

   #####error page location redirect 301#####
	location @notfound {
		return 301 /;
		}
location /app {
        add_header 'Access-Control-Allow-Origin' '*';
	# proxy_pass http://localhost:2025;
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }




        location / {
        add_header 'Access-Control-Allow-Origin' '*';
	proxy_pass http://localhost:2025;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/stapubox.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/stapubox.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    #rate Limiter
    limit_req zone=one burst=20 nodelay;

}

#server {
#	listen 80 default_server;
#	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

#	root /var/www/html;

	# Add index.php to the list if you are using PHP
#	index index.html index.htm index.nginx-debian.html;

#	server_name _;

#	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
#		try_files $uri $uri/ =404;
#	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
#}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

server {
    if ($host = www.stapubox.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = stapubox.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

 
	listen 80; 
	server_name www.stapubox.com stapubox.com;
    return 404; # managed by Certbot




}
